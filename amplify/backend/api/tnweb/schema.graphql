type Film @model {
  id: ID!
  title: String!
  genre: String
  hlsUrl: String
  thumbNailsUrls: [String]
  duration: Int
  available: Boolean
  sub: String
  lists:[FilmInList!]@connection(keyName: "byFilm", fields: ["id"])
}
type LiveStream @model {
  id: ID!
  playbackID: String
  streamKey: String
  latestAssetID: String
  IDforThumbnail: String
  status: String
  streamerName: String
}

type PlayList @model{
id:ID!
name:String
User:User@connection(name: "UsermyList")
films:[FilmInList!]@connection(keyName: "byPlayList", fields: ["id"])
}

type FilmInList@model
@key(name: "byPlayList", fields: ["listId","filmId"],queryField: "FilmInListByListByFilm")
@key(name: "byFilm", fields: ["filmId","listId"])
 {
  id: ID!
  film:Film!@connection(fields: ["filmId"])
  filmId:ID!
  listId:ID!
  list:PlayList@connection(fields: ["listId"])
}

type User @model {
  id: ID!
  name: String
  location: String
  fullAccess: Boolean
  admin: Boolean
  liveStreamID: String
  liveChannelCreated: Boolean
  remainingVODTime: Int
  remainingLiveTime: Int
  myList:PlayList@connection(name: "UsermyList")
}

type ConnectItem {
  userId: String
  status: String
  }

type Connect @model {
  id: ID!
  userId: String
  connectsId: [ConnectItem]
}